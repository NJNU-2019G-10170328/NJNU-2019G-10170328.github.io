#include<iostream>
using namespace std;

struct Job
{
	char id;
	int cost;
	int deadline;
	int value;
};

void Judgeprint(Job arr[], int i, int j, int q, int w) {
	int a;
	Job best[4];
	int cost = 0;//总花费
	int deadline = 0;//截止时间
	int totalvalue = 0;//总价值
	best[0] = arr[i];
	best[1] = arr[j];
	best[2] = arr[q];
	best[3] = arr[w];
	cout << "Possible Job sequences:";
	for (a = 0; a < 4; a++) {//在每种组合顺序情况下做依次插入判断
		cost = cost + best[a].cost;
		if (cost > best[a].deadline)
			cost = cost - best[a].cost;
		else {
			totalvalue += best[a].value;//累计总价值
			cout << best[a].id << " ";//输出符合条件的工作id
		}
	}
	cout << "  The total value: " << totalvalue << endl;//输出总价值
	cost = 0;//复原
	deadline = 0;//复原
	totalvalue = 0;//复原
}

void Bestvalue(Job arr[]) {//计算四种工作的全排列
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 4; j++) {
			for (int q = 0; q < 4; q++) {
				for (int w = 0; w < 4; w++) {
					if (i != j && i != q && i != w && j != q && j != w && q != w) {
						Judgeprint(arr, i, j, q, w);//判断在该序列下符合条件的情况
					}
				}
			}
		}
	}
}
int main()
{
	Job arr[] = { { 'a',4, 10, 2 },{ 'b',3, 8, 3 },{ 'c', 2,4, 3 },{ 'd', 1, 2,6 } };//初始化
	cout << "Following is possible sequences of jobs\n";
	Bestvalue(arr);

	getchar();
	getchar();
	return 0;
}
